name: CI/CD Pipeline mit E2E-Tests

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  e2e-validation:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Code-Checkout
        uses: actions/checkout@v4
      - name: Node.js Umgebung initialisieren
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Abhängigkeiten installieren
        run: npm ci
      - name: Playwright Browser-Binaries installieren
        run: npx playwright install --with-deps

      # Debugging PËRPARA testeve
      - name: Debug - Check package.json script
        run: |
          echo "=== Package.json scripts ==="
          cat package.json | grep -A 5 -B 5 "scripts"

      # FORCO PLAYWRIGHT të krijojë raport duke përdorur komanda të drejtpërdrejta
      - name: End-to-End Tests ausführen (with forced HTML report)
        run: |
          echo "=== Running Playwright with explicit HTML reporter ==="
          npx playwright test --reporter=html
        continue-on-error: true

      # Debugging PAS testeve
      - name: Debug - Comprehensive check after tests
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== All files and directories (with details) ==="
          ls -la
          echo "=== Search for ALL report directories ==="
          find . -type d -name "*report*" -o -name "*results*" -o -name "*coverage*" 2>/dev/null || true
          echo "=== Search for HTML files ==="
          find . -name "*.html" 2>/dev/null | head -10 || true
          echo "=== Check for playwright-report specifically ==="
          if [ -d "playwright-report" ]; then
            echo "✅ playwright-report directory exists!"
            ls -la playwright-report/
          else
            echo "❌ playwright-report directory does NOT exist"
          fi
          echo "=== Check for test-results directory ==="
          if [ -d "test-results" ]; then
            echo "✅ test-results directory exists!"
            ls -la test-results/
          else
            echo "❌ test-results directory does NOT exist"
          fi

      # BACKUP APPROACH: Upload whatever report directory exists
      - name: Upload playwright-report (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
        continue-on-error: true

      - name: Upload test-results (backup approach)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-backup
          path: test-results/
        continue-on-error: true

  build-and-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker Registry Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Docker Buildx initialisieren
        uses: docker/setup-buildx-action@v3
      - name: Docker-Image erstellen und veröffentlichen
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_USER }}/playwright-test-project:latest
          platforms: linux/amd64,linux/arm64
